dnl Run `aclocal' to create macro file (if missing).
dnl Run `automake -a -c' to copy macro files (if missing).
dnl Run `autoconf' to create `configure' script.

AC_INIT(sidplay.cpp)
AM_INIT_AUTOMAKE(sidplay-base, 1.0.9)

AC_CANONICAL_HOST
dnl AC_PREFIX_DEFAULT(/usr)

AC_PROG_CXX
AC_LANG_CPLUSPLUS

MY_PATH_LIBSIDPLAY
if test "$my_have_sidplay" = no; then
  AC_MSG_ERROR([
SIDPLAY library and/or headers found not found.
Please check your installation!
]);
fi

AC_HEADER_STDC
AC_CHECK_HEADERS(signal.h iostream.h iomanip.h)
AC_CHECK_HEADERS(sys/ioctl.h linux/soundcard.h machine/soundcard.h  \
  soundcard.h sys/audio.h sun/audioio.h sun/dbriio.h sys/audioio.h  \
  audio.h dmedia/audio.h)

AC_PATH_PROG(CP,cp,cp)

dnl NetBSD, OpenBSD
AC_CHECK_LIB(ossaudio, main, [LIBAUDIO=-lossaudio AC_SUBST(LIBAUDIO)])

AC_MSG_CHECKING(which audio driver to install)
case "$host" in 
  *linux*) AC_DEFINE(HAVE_LINUX,1)
    $CP audio/oss/* .
    AC_MSG_RESULT(oss)
       ;;
  *freebsd*) AC_DEFINE(HAVE_FREEBSD,1)
    $CP audio/oss/* .
    AC_MSG_RESULT(oss)
       ;;
  *hpux*) AC_DEFINE(HAVE_HPUX,1)
    $CP audio/hpux/* .
    AC_MSG_RESULT(hpux)
       ;;
  *sgi*) AC_DEFINE(HAVE_SGI,1)
    $CP audio/sgi/* .
    AC_MSG_RESULT(sgi)
       ;;
  *solaris*) AC_DEFINE(HAVE_SOLARIS,1)
    $CP audio/sparc/* .
    AC_MSG_RESULT(sparc)
       ;;
  *sunos*) AC_DEFINE(HAVE_SUNOS,1)
    $CP audio/sparc/* .
    AC_MSG_RESULT(sparc)
       ;;
  *netbsd*) AC_DEFINE(HAVE_NETBSD,1)
    $CP audio/oss/* .
    AC_MSG_RESULT(oss)
    if test -z "$LIBAUDIO"; then
      AC_MSG_ERROR([libossaudio required, but not found.]);
    fi
       ;;
  *openbsd*) AC_DEFINE(HAVE_OPENBSD,1)
    $CP audio/oss/* .
    AC_MSG_RESULT(oss)
    if test -z "$LIBAUDIO"; then
      AC_MSG_ERROR([libossaudio required, but not found.]);
    fi
       ;;
esac

AC_OUTPUT(Makefile)

